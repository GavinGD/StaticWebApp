{"ast":null,"code":"var _jsxFileName = \"/Users/gavin/Desktop/4870/toonland/src/pages/ToonDetailPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ToonList from '../components/ToonList';\nimport NotFoundPage from './NotFoundPage';\nimport toons from '../data/toon';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToonDetailPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const person = toons.find(data => data.id === Number(id));\n  const [toonInfo, setToonInfo] = useState({\n    votes: 0,\n    id: 0,\n    firstName: '',\n    lastName: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`https://api4all.azurewebsites.net/api/people/${id}`);\n      const body = await result.json();\n      setToonInfo(body);\n    };\n\n    fetchData();\n  }, [id]);\n  if (!person) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This cartoon character has received \", toonInfo.votes, \" votes.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-info\",\n      children: [person.id, \". \", person.firstName, \" \", person.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        \"width\": \"90%\",\n        \"margin\": \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              \"width\": \"15%\",\n              \"verticalAlign\": \"top\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"rounded img-responsive pull-right img-thumbnail float-left\",\n              style: {\n                \"width\": \"50%\"\n              },\n              src: `${person.pictureUrl}`,\n              alt: `${person.firstName} ${person.lastName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              \"height\": \"80px\",\n              \"verticalAlign\": \"top\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Occupation: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 18\n              }, this), person.occupation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Gender: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 18\n              }, this), person.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              \"width\": \"20%\",\n              \"verticalAlign\": \"top\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Others:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToonList, {\n              exceptId: person.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToonDetailPage, \"mgFYN5Brs6cT5ej4kTjIP7QhUVA=\", false, function () {\n  return [useParams];\n});\n\n_c = ToonDetailPage;\nexport default ToonDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToonDetailPage\");","map":{"version":3,"sources":["/Users/gavin/Desktop/4870/toonland/src/pages/ToonDetailPage.js"],"names":["React","ToonList","NotFoundPage","toons","useParams","useState","useEffect","ToonDetailPage","id","person","find","data","Number","toonInfo","setToonInfo","votes","firstName","lastName","fetchData","result","fetch","body","json","pictureUrl","occupation","gender"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ToonList from '../components/ToonList';\nimport NotFoundPage from './NotFoundPage';\nimport toons from '../data/toon'\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react'\n\nconst ToonDetailPage = () => {\n  const { id } = useParams();\n  const person = toons.find(\n    data => data.id === Number(id)\n  );\n\n  const [toonInfo, setToonInfo] = useState({\n    votes: 0,\n    id: 0,\n    firstName: '',\n    lastName: ''\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`https://api4all.azurewebsites.net/api/people/${id}`);\n      const body = await result.json();\n      \n      setToonInfo(body);\n    }\n    fetchData();\n\n  }, [id]);\n\n  if (!person) return <NotFoundPage />\n\n  return (\n    <>\n      <p>This cartoon character has received {toonInfo.votes} votes.</p>\n      <h4 className=\"text-info\">{person.id}. {person.firstName} {person.lastName}</h4>\n      <table style={{ \"width\": \"90%\", \"margin\": \"auto\" }}>\n        <tbody>\n          <tr>\n            <td style={{ \"width\": \"15%\", \"verticalAlign\": \"top\" }}>\n              <img className=\"rounded img-responsive pull-right img-thumbnail float-left\"\n                style={{ \"width\": \"50%\" }}\n                src={`${person.pictureUrl}`} alt={`${person.firstName} ${person.lastName}`} />\n            </td>\n            <td style={{ \"height\": \"80px\", \"verticalAlign\": \"top\" }}>\n              <p><b>Occupation: </b>{person.occupation}</p>\n              <p><b>Gender: </b>{person.gender}</p>\n            </td>\n            <td style={{ \"width\": \"20%\", \"verticalAlign\": \"top\" }}>\n              <h3>Others:</h3>\n              <ToonList exceptId={person.id} />\n            </td>\n\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n}\nexport default ToonDetailPage;"]},"metadata":{},"sourceType":"module"}